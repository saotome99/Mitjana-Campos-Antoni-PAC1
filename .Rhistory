load("C:/Users/tonim/Documents/PAC1/PAC1.Rda")
load("C:/Users/tonim/Documents/PAC1/PAC1.Rda")
print(contenidor$dades)
print(PAC1$dades)
load("C:/Users/tonim/Documents/PAC1/PAC1.Rda")
print("C:/Users/tonim/Documents/PAC1/PAC1$dades")
# Carregar el paquet SummarizedExperiment
library(SummarizedExperiment)
# Carregar el dataset
cachexia_data <- read.csv("human_cachexia.csv")
# Separar les metadades i les dades de metabòlits
patient_metadata <- cachexia_data[, c("Patient.ID", "Muscle.loss")]
metabolite_data <- as.matrix(cachexia_data[, -c(1, 2)])
# Crear un objecte SummarizedExperiment
se <- SummarizedExperiment(
assays = list(counts = metabolite_data),
colData = DataFrame(patient_metadata),
metadata = list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
)
# Carregar el paquet SummarizedExperiment
library(SummarizedExperiment)
# Carregar el dataset i separar metadades i dades de metabòlits
cachexia_data <- read.csv("human_cachexia.csv")
patient_metadata <- DataFrame(cachexia_data[, c("Patient.ID", "Muscle.loss")])
metabolite_data <- as.matrix(cachexia_data[, -c(1, 2)])
# Assegurar que les files coincideixen en nom entre les dades i les metadades
rownames(metabolite_data) <- patient_metadata$Patient.ID
# Crear i explorar l'objecte SummarizedExperiment en un sol pas
se <- SummarizedExperiment(
assays = list(counts = metabolite_data),
colData = patient_metadata,
metadata = list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
)
Aquest error indica que la longitud dels `rownames` que intentem assignar a `metabolite_data` no coincideix amb el nombre de files en `metabolite_data`. Això pot passar si hi ha files en `patient_metadata` que no coincideixen amb `metabolite_data`. Per resoldre-ho:
# Carregar el paquet SummarizedExperiment
library(SummarizedExperiment)
# Carregar el dataset
cachexia_data <- read.csv("human_cachexia.csv")
# Separar les metadades i les dades de metabòlits
patient_metadata <- DataFrame(cachexia_data[, c("Patient.ID", "Muscle.loss")])
metabolite_data <- as.matrix(cachexia_data[, -c(1, 2)])
# Verificar dimensions
if (nrow(patient_metadata) == nrow(metabolite_data)) {
rownames(metabolite_data) <- patient_metadata$Patient.ID
} else {
stop("El nombre de files en 'patient_metadata' i 'metabolite_data' no coincideix.")
}
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(
assays = list(counts = metabolite_data),
colData = patient_metadata,
metadata = list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
)
# Carregar el paquet SummarizedExperiment
library(SummarizedExperiment)
# Carregar el dataset
cachexia_data <- read.csv("human_cachexia.csv")
# Separar les metadades i les dades de metabòlits
patient_metadata <- DataFrame(cachexia_data[, c("Patient.ID", "Muscle.loss")])
metabolite_data <- as.matrix(cachexia_data[, -c(1, 2)])
# Verificar dimensions
if (nrow(patient_metadata) == nrow(metabolite_data)) {
rownames(metabolite_data) <- patient_metadata$Patient.ID
} else {
stop("El nombre de files en 'patient_metadata' i 'metabolite_data' no coincideix.")
}
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(
assays = list(counts = metabolite_data),
colData = patient_metadata,
metadata = list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
)
# Carregar el paquet SummarizedExperiment
library(SummarizedExperiment)
# Carregar el dataset
cachexia_data <- read.csv("human_cachexia.csv")
# Separar les metadades i les dades de metabòlits
patient_metadata <- DataFrame(cachexia_data[, c("Patient.ID", "Muscle.loss")])
metabolite_data <- as.matrix(cachexia_data[, -c(1, 2)])
# Verificar dimensions
if (nrow(patient_metadata) == nrow(metabolite_data)) {
rownames(metabolite_data) <- patient_metadata$Patient.ID
} else {
stop("El nombre de files en 'patient_metadata' i 'metabolite_data' no coincideix.")
}
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(
assays = list(counts = metabolite_data),
colData = patient_metadata,
metadata = list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
)
# Carregar el paquet SummarizedExperiment
library(SummarizedExperiment)
# Carregar el dataset
cachexia_data <- read.csv("human_cachexia.csv")
# Separar les metadades i les dades de metabòlits
patient_metadata <- DataFrame(cachexia_data[, c("Patient.ID", "Muscle.loss")])
metabolite_data <- as.matrix(cachexia_data[, -c(1, 2)])
# Comprovacions addicionals
# 1. Comprovar duplicats o NA en 'Patient.ID'
if (any(duplicated(patient_metadata$Patient.ID))) {
stop("Hi ha duplicats en 'Patient.ID'.")
}
if (any(is.na(patient_metadata$Patient.ID))) {
stop("Hi ha valors NA en 'Patient.ID'.")
}
# 2. Verificar si les dimensions coincideixen
if (nrow(patient_metadata) != nrow(metabolite_data)) {
stop("El nombre de files en 'patient_metadata' i 'metabolite_data' no coincideix.")
}
# Si tot és correcte, assignar els rownames i crear l'objecte SummarizedExperiment
rownames(metabolite_data) <- patient_metadata$Patient.ID
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(
assays = list(counts = metabolite_data),
colData = patient_metadata,
metadata = list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
)
# Comprovem si el paquet "BiocManager" està disponible al sistema
# La funció requireNamespace() retorna TRUE si el paquet està instal·lat, i FALSE si no ho està
# El paràmetre 'quietly = TRUE' evita mostrar missatges durant la comprovació
if (!requireNamespace("BiocManager", quietly = TRUE)) {
# Si el paquet "BiocManager" no està instal·lat, el descarreguem i instal·lem des de CRAN
install.packages("BiocManager")
}
# Un cop tenim "BiocManager" instal·lat, utilitzem la seva funció per instal·lar el paquet "SummarizedExperiment"
# "SummarizedExperiment" és un paquet del repositori Bioconductor, que s'utilitza per treballar amb dades genòmiques estructurades
BiocManager::install("SummarizedExperiment")
library(SummarizedExperiment)
# Carregar les dades des d'un fitxer CSV
data <- read.csv("human_cachexia.csv", row.names = 1)
# Matriu de dades (valors de metabòlits)
# Excloem les primeres dues columnes, que són identificadors i informació clínica
assay_data <- as.matrix(data[, -c(1,2)])
# Afegir la descripció al camp de metadades
metadata(se) <- list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
# Comprovem si el paquet "BiocManager" està disponible al sistema
# La funció requireNamespace() retorna TRUE si el paquet està instal·lat, i FALSE si no ho està
# El paràmetre 'quietly = TRUE' evita mostrar missatges durant la comprovació
if (!requireNamespace("BiocManager", quietly = TRUE)) {
# Si el paquet "BiocManager" no està instal·lat, el descarreguem i instal·lem des de CRAN
install.packages("BiocManager")
}
# Un cop tenim "BiocManager" instal·lat, utilitzem la seva funció per instal·lar el paquet "SummarizedExperiment"
# "SummarizedExperiment" és un paquet del repositori Bioconductor, que s'utilitza per treballar amb dades genòmiques estructurades
BiocManager::install("SummarizedExperiment")
library(SummarizedExperiment)
# Carregar les dades des d'un fitxer CSV
data <- read.csv("human_cachexia.csv", row.names = 1)
# Matriu de dades (valors de metabòlits)
# Excloem les primeres dues columnes, que són identificadors i informació clínica
assay_data <- as.matrix(data[, -c(1,2)])
# Afegir la descripció al camp de metadades
metadata(se) <- list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
# Carregar el paquet SummarizedExperiment
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
if (!requireNamespace("SummarizedExperiment", quietly = TRUE)) {
BiocManager::install("SummarizedExperiment")
}
library(SummarizedExperiment)
# Carregar les dades des d'un fitxer CSV
data <- read.csv("human_cachexia.csv", row.names = 1)
# Matriu de dades (valors de metabòlits), excloent les primeres dues columnes
assay_data <- as.matrix(data[, -c(1,2)])
# Metadades de les files (informació sobre els pacients)
row_metadata <- DataFrame(
Muscle_loss = data$Muscle.loss,  # Indicació de pèrdua de massa muscular
row.names = rownames(data)  # Assignem les files del dataframe a les metadades
)
# Metadades de les columnes (nom dels metabòlits)
col_metadata <- DataFrame(
Metabolite = colnames(assay_data)  # Assignem els noms dels metabòlits com a metadades de les columnes
)
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(
assays = list(counts = assay_data),  # Dades d'expressió o valors dels metabòlits
rowData = row_metadata,  # Metadades dels pacients
colData = col_metadata  # Metadades dels metabòlits
)
# Afegir la descripció al camp de metadades
metadata(se) <- list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
# Guardar l'objecte SummarizedExperiment creat
save(se, file = "C:/Users/tonim/Documents/PAC1/PAC1.Rda")
# Exploració del SummarizedExperiment
print("Assay Data:")
print(assay(se))
print("Patient Metadata:")
print(colData(se))
print("Dataset Description:")
print(metadata(se))
print("Dimensions:")
print(dim(se))
# Anàlisis estadístiques i gràfiques
# 1. Resum estadístic de les dades numèriques
summary_stats <- summary(data[, -c(1,2)])  # Excloem les columnes 'Patient ID' i 'Muscle loss'
print(summary_stats)
# 2. Comprovació de valors mancats
missing_values <- sum(is.na(data))
print(paste("Total de valors mancats:", missing_values))
missing_proportions <- colSums(is.na(data)) / nrow(data)
print("Proporció de valors mancats per metabòlit:")
print(missing_proportions)
# 3. Distribució dels metabòlits (Boxplot)
boxplot(data[, -c(1,2)], main = "Distribució dels metabòlits", las = 2)
# 4. Comparació entre pacients cachectics i no cachectics
cachectic <- data[data$Muscle.loss == "cachexic", -c(1,2)]
non_cachectic <- data[data$Muscle.loss != "cachexic", -c(1,2)]
cachectic_mean <- colMeans(cachectic, na.rm = TRUE)
non_cachectic_mean <- colMeans(non_cachectic, na.rm = TRUE)
comparison <- data.frame(Cachectic = cachectic_mean, Non_cachectic = non_cachectic_mean)
print("Comparació entre pacients cachectics i no cachectics:")
print(comparison)
barplot(t(as.matrix(comparison)), beside = TRUE,
legend = TRUE, main = "Comparació de metabòlits")
# 5. Correlacions entre metabòlits (Mapa de calor)
correlations <- cor(data[, -c(1,2)], use = "complete.obs")
heatmap(correlations, main = "Mapa de calor de les correlacions entre metabòlits")
# 6. PCA dels pacients
pca <- prcomp(data[, -c(1,2)], scale. = TRUE)
plot(pca$x[, 1:2], col = ifelse(data$Muscle.loss == "cachexic", "red", "blue"),
main = "PCA dels pacients", xlab = "PC1", ylab = "PC2")
legend("topright", legend = c("Cachexic", "No cachexic"), col = c("red", "blue"), pch = 1)
# 7. Diferències estadístiques (t-test)
t_tests <- apply(data[, -c(1,2)], 2, function(metabolite) t.test(metabolite ~ data$Muscle.loss)$p.value)
significant_metabolites <- which(t_tests < 0.05)
print("Metabòlits significatius:")
print(names(significant_metabolites))
---
title: "Untitled"
```{r setup, include=FALSE}
```{r}
---
output:
pdf_document: default
---
output:
pdf_document: default
# Carregar el paquet SummarizedExperiment
if (!requireNamespace("BiocManager", quietly = TRUE)) {
install.packages("BiocManager")
}
if (!requireNamespace("SummarizedExperiment", quietly = TRUE)) {
BiocManager::install("SummarizedExperiment")
}
library(SummarizedExperiment)
# Carregar les dades des d'un fitxer CSV
data <- read.csv("human_cachexia.csv", row.names = 1)
# Matriu de dades (valors de metabòlits), excloent les primeres dues columnes
assay_data <- as.matrix(data[, -c(1,2)])
# Metadades de les files (informació sobre els pacients)
row_metadata <- DataFrame(
Muscle_loss = data$Muscle.loss,  # Indicació de pèrdua de massa muscular
row.names = rownames(data)  # Assignem les files del dataframe a les metadades
)
# Metadades de les columnes (nom dels metabòlits)
col_metadata <- DataFrame(
Metabolite = colnames(assay_data)  # Assignem els noms dels metabòlits com a metadades de les columnes
)
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(
assays = list(counts = assay_data),  # Dades d'expressió o valors dels metabòlits
rowData = row_metadata,  # Metadades dels pacients
colData = col_metadata  # Metadades dels metabòlits
)
# Afegir la descripció al camp de metadades
metadata(se) <- list(description = "Human Cachexia dataset amb els ID dels pacients, estat de pèrdua muscular i mesures de metabòlits.")
# Guardar l'objecte SummarizedExperiment creat
save(se, file = "C:/Users/tonim/Documents/PAC1/PAC1.Rda")
# Exploració del SummarizedExperiment
print("Assay Data:")
print(assay(se))
print("Patient Metadata:")
print(colData(se))
print("Dataset Description:")
print(metadata(se))
print("Dimensions:")
print(dim(se))
# Anàlisis estadístiques i gràfiques
# 1. Resum estadístic de les dades numèriques
summary_stats <- summary(data[, -c(1,2)])  # Excloem les columnes 'Patient ID' i 'Muscle loss'
print(summary_stats)
# 2. Comprovació de valors mancats
missing_values <- sum(is.na(data))
print(paste("Total de valors mancats:", missing_values))
missing_proportions <- colSums(is.na(data)) / nrow(data)
print("Proporció de valors mancats per metabòlit:")
print(missing_proportions)
# 3. Distribució dels metabòlits (Boxplot)
boxplot(data[, -c(1,2)], main = "Distribució dels metabòlits", las = 2)
# 4. Comparació entre pacients cachectics i no cachectics
cachectic <- data[data$Muscle.loss == "cachexic", -c(1,2)]
non_cachectic <- data[data$Muscle.loss != "cachexic", -c(1,2)]
cachectic_mean <- colMeans(cachectic, na.rm = TRUE)
non_cachectic_mean <- colMeans(non_cachectic, na.rm = TRUE)
comparison <- data.frame(Cachectic = cachectic_mean, Non_cachectic = non_cachectic_mean)
print("Comparació entre pacients cachectics i no cachectics:")
print(comparison)
barplot(t(as.matrix(comparison)), beside = TRUE,
legend = TRUE, main = "Comparació de metabòlits")
# 5. Correlacions entre metabòlits (Mapa de calor)
correlations <- cor(data[, -c(1,2)], use = "complete.obs")
heatmap(correlations, main = "Mapa de calor de les correlacions entre metabòlits")
# 6. PCA dels pacients
pca <- prcomp(data[, -c(1,2)], scale. = TRUE)
plot(pca$x[, 1:2], col = ifelse(data$Muscle.loss == "cachexic", "red", "blue"),
main = "PCA dels pacients", xlab = "PC1", ylab = "PC2")
legend("topright", legend = c("Cachexic", "No cachexic"), col = c("red", "blue"), pch = 1)
# 7. Diferències estadístiques (t-test)
t_tests <- apply(data[, -c(1,2)], 2, function(metabolite) t.test(metabolite ~ data$Muscle.loss)$p.value)
significant_metabolites <- which(t_tests < 0.05)
print("Metabòlits significatius:")
print(names(significant_metabolites))
---
title: "Exploració del Dataset de Cachexia Humana"
---
title: "Exploració del Dataset de Cachexia Humana"
---
title: "Exploració del Dataset de Cachexia Humana"
---
output: html_document
---
title: "Untitled"
---
title: "Untitled"
load("C:/Users/tonim/Documents/PAC1/PAC1c.Rda")
View(se)
# Configuració inicial per a knitr
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# Carregar les llibreries necessàries
library(dplyr)
library(SummarizedExperiment)
library(SummarizedExperiment)
library(ggplot2)
library(pheatmap)
# Carregar el dataset
dades <- read.csv("human_cachexia.csv", header = TRUE)
# Comprovar que la primera columna és d'identificadors únics
if (anyDuplicated(dades[, 1]) > 0 || any(is.na(dades[, 1]))) {
stop("La primera columna conté valors duplicats o buits. Revisa els identificadors.")
}
dades <- dades[, -1]
# Convertir les columnes a numèric quan sigui necessari i seleccionar les columnes numèriques
dades <- dades %>% mutate_if(is.character, as.numeric)
dades_num <- na.omit(dades[sapply(dades, is.numeric)])  # Eliminar files amb valors NA
# Comprovar si el nombre de files de dades_num i els noms de fila coincideixen
if (nrow(dades_num) != length(rownames(dades_num))) {
stop("Longitud de noms de fila no coincideix amb el nombre de files de dades_num.")
}
# Estandarització de les dades amb z-scores
dades_scaled <- scale(dades_num)
# Creació de metadades utilitzant la columna "Muscle loss" per la condició
metadades_fila <- DataFrame(metabolit_id = rownames(dades_scaled))
metadades_columna <- DataFrame(condicio = dades$`Muscle loss`)
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(assays = list(counts = as.matrix(dades_scaled)),
rowData = metadades_fila,
colData = metadades_columna)
# 3.3.1 Descàrrega i revisió de les dades
# Carregar el dataset
dades <- read.csv("human_cachexia.csv", header = TRUE)
# Revisió inicial de les dades
head(dades)  # Mostra les primeres files per veure l'estructura general
str(dades)   # Mostra l'estructura i tipus de les dades per cada columna
# 3.3.2 Preprocessament de les dades
# Estandarització de les dades amb z-scores
dades_num <- dades[, -c(1, 2)]  # Suposant que les primeres dues columnes són 'PatientID' i 'Muscleloss'
dades_scaled <- scale(dades_num)  # Transformació a z-scores
# Identificació de valors atípics mitjançant boxplots
par(mfrow = c(3, 3))  # Configura una graella per als gràfics
apply(dades_scaled, 2, boxplot, main = "Valors atípics per cada metabòlit")
apply(dades_scaled, 2, boxplot, main = "Valors atípics per cada metabòlit")
# 3.3.3 Creació de l'objecte SummarizedExperiment
library(SummarizedExperiment)
# 3.3.3 Creació de l'objecte SummarizedExperiment
library(SummarizedExperiment)
# Creació de metadades
# Metadades de les files (metabòlits)
metadades_fila <- DataFrame(metabolit_id = colnames(dades_scaled))
# Metadades de les columnes (mostres i condició)
metadades_columna <- DataFrame(condicio = dades$Muscleloss)
# Creació de l'objecte SummarizedExperiment
se <- SummarizedExperiment(assays = list(counts = as.matrix(dades_scaled)),
rowData = metadades_fila,
colData = metadades_columna)
# Identificació de valors atípics mitjançant boxplots
par(mfrow = c(3, 3))  # Configura una graella per als gràfics
apply(dades_scaled, 2, boxplot, main = "Valors atípics per cada metabòlit")
apply(dades_scaled, 2, boxplot, main = "Valors atípics per cada metabòlit")
# 3.3.3 Creació de l'objecte SummarizedExperiment
library(SummarizedExperiment)
# Creació de metadades
# Metadades de les files (metabòlits)
metadades_fila <- DataFrame(metabolit_id = colnames(dades_scaled))
# Metadades de les columnes (mostres i condició)
metadades_columna <- DataFrame(condicio = dades$Muscleloss)
# Metadades de les columnes (mostres i condició)
metadades_columna <- DataFrame(condicio = dades$Muscleloss)
# Creació de l'objecte SummarizedExperiment
se <- SummarizedExperiment(assays = list(counts = as.matrix(dades_scaled)))
# Guardar l'objecte per a un ús futur
save(se, file = "human_cachexia.Rda")
# 3.3.4 Exploració inicial de les dades
summary(dades_scaled)  # Resum de les dades estandarditzades
# Creació de metadades
# Metadades de les files (metabòlits)
metadades_fila <- DataFrame(metabolit_id = colnames(dades_scaled))
# Metadades de les columnes (mostres i condició)
metadades_columna <- DataFrame(condicio = dades$Muscleloss)
# Creació de l'objecte SummarizedExperiment
se <- SummarizedExperiment(assays = list(counts = as.matrix(dades_scaled)))
# Guardar l'objecte per a un ús futur
save(se, file = "human_cachexia.Rda")
# 3.3.4 Exploració inicial de les dades
summary(dades_scaled)  # Resum de les dades estandarditzades
head(dades_scaled)     # Visualització de les primeres files de les dades estandarditzades
# Carregar llibreries necessàries
library(dplyr)
library(SummarizedExperiment)
library(ggplot2)
library(pheatmap)
# Carregar el dataset i assignar noms de fila
dades <- read.csv("human_cachexia.csv", header = TRUE, row.names = 1)
# Comprovar si hi ha valors duplicats o NA en `PatientID`
stopifnot(!anyDuplicated(rownames(dades)), !any(is.na(rownames(dades))))
# Convertir columnes de caràcter a numèric quan sigui necessari
dades <- dades %>% mutate_if(is.character, as.numeric)
# Separar la columna de condició i les dades numèriques
condicio <- factor(dades$Muscleloss, levels = c("cachexic", "control"))
dades_num <- na.omit(dades[, -1])  # Excloure la columna `Muscleloss` i eliminar files amb NA
# Estandardització amb z-scores
dades_scaled <- scale(dades_num)
# Crear l'objecte SummarizedExperiment només amb l'assay
se <- SummarizedExperiment(assays = list(counts = as.matrix(dades_scaled)),
colData = DataFrame(condicio = condicio))
# Convertir columnes de caràcter a numèric quan sigui necessari
dades <- dades %>% mutate_if(is.character, as.numeric)
# Separar la columna de condició i les dades numèriques
condicio <- factor(dades$Muscleloss, levels = c("cachexic", "control"))
dades_num <- na.omit(dades[, -1])  # Excloure la columna `Muscleloss` i eliminar files amb NA
# Estandardització amb z-scores
dades_scaled <- scale(dades_num)
# Crear l'objecte SummarizedExperiment només amb l'assay
se <- SummarizedExperiment(assays = list(counts = as.matrix(dades_scaled)))
# Guardar l'objecte
save(se, file = "human_cachexia.Rda")
# Anàlisi PCA
pca <- prcomp(t(assay(se)), scale. = TRUE)
autoplot(pca, data = colData(se), colour = 'condicio') +
ggtitle("Anàlisi de Components Principals (PCA)")
# Guardar l'objecte
save(se, file = "human_cachexia.Rda")
# Anàlisi PCA
pca <- prcomp(t(assay(se)), scale. = TRUE)
# Convertir el resultat del PCA en un data frame per a ggplot2
pca_data <- data.frame(PC1 = pca$x[, 1], PC2 = pca$x[, 2], condicio = colData(se)$condicio)
# Crear el gràfic PCA amb ggplot2
ggplot(pca_data, aes(x = PC1, y = PC2, color = condicio)) +
geom_point(size = 3) +
ggtitle("Anàlisi de Components Principals (PCA)") +
xlab("Component Principal 1") +
ylab("Component Principal 2") +
theme_minimal()
# Generació de Heatmap
pheatmap(assay(se), main = "Heatmap de Concentracions de Metabòlits",
cluster_rows = TRUE, cluster_cols = TRUE)
# Aplicació de proves estadístiques amb correcció FDR
resultats <- apply(assay(se), 1, function(x) { t.test(x ~ se$condicio) })
p_vals_adjusted <- p.adjust(sapply(resultats, function(x) x$p.value), method = "fdr")
significatius <- rownames(assay(se))[p_vals_adjusted < 0.05]
print(paste("Metabòlits significatius:", significatius))
# Llibreria necessària
library(SummarizedExperiment)
# Carregar el dataset
data <- read.csv("human_cachexia.csv", row.names = 1)
# Dividir les dades i metadades
assay_data <- as.matrix(data[, -(1:2)])  # Només les dades dels metabolites
col_data <- data.frame(PatientID = data$PatientID, MuscleLoss = data$Muscleloss)
# Crear l'objecte SummarizedExperiment
se <- SummarizedExperiment(assays = list(counts = assay_data),
colData = col_data)
# Consultar l'objecte SummarizedExperiment
se
load("C:/Users/tonim/Documents/PAC1/PAC1c.Rda")
library(SummarizedExperiment)
library(dplyr)
library(dplyr)
library(ggplot2)
# Carrega del dataset
data <- read_csv("human_cachexia.csv")
print(head(data))
expression_data <- as.matrix(data[,-1])
expression_data <- apply(expression_data, 2, as.numeric)
rownames(expression_data) <- data[[1]]
col_data <- data.frame(SampleID = colnames(expression_data))
se <- SummarizedExperiment(assays = list(counts = expression_data),
colData = col_data)
load("C:/Users/tonim/Documents/PAC1/human_cachexia.Rda")
load("C:/Users/tonim/Downloads/human_cachexia.Rda")
# Configuració inicial per a knitr
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
